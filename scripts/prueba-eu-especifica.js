// Cargar variables de entorno desde .env
require('dotenv').config();

const { S3Client, ListObjectsV2Command, ListBucketsCommand } = require('@aws-sdk/client-s3');

console.log('üîç Prueba Espec√≠fica EU R2');
console.log('==========================');
console.log('');

const config = {
  accountId: process.env.CLOUDFLARE_ACCOUNT_ID,
  accessKeyId: process.env.CLOUDFLARE_ACCESS_KEY_ID,
  secretAccessKey: process.env.CLOUDFLARE_SECRET_ACCESS_KEY,
  bucketName: 'bucket-wedding'
};

console.log('üìã Configuraci√≥n:');
console.log(`   Account ID: ${config.accountId}`);
console.log(`   Access Key ID: ${config.accessKeyId}`);
console.log(`   Bucket Name: ${config.bucketName}`);
console.log('');

// Probar con el endpoint EU espec√≠fico
const s3Client = new S3Client({
  region: 'eu-west-1', // Regi√≥n espec√≠fica para EU
  endpoint: `https://${config.accountId}.r2.cloudflarestorage.com`,
  credentials: {
    accessKeyId: config.accessKeyId,
    secretAccessKey: config.secretAccessKey,
  },
});

async function probarEU() {
  try {
    console.log('üîó Probando conexi√≥n con regi√≥n EU...');
    console.log(`   Endpoint: https://${config.accountId}.r2.cloudflarestorage.com`);
    console.log(`   Regi√≥n: eu-west-1`);
    console.log('');
    
    // Probar listar buckets
    console.log('üì¶ Paso 1: Listando buckets...');
    const listBucketsCommand = new ListBucketsCommand({});
    const bucketsResponse = await s3Client.send(listBucketsCommand);
    
    console.log(`   ‚úÖ Conexi√≥n exitosa`);
    console.log(`   üì¶ Buckets encontrados: ${bucketsResponse.Buckets ? bucketsResponse.Buckets.length : 0}`);
    
    if (bucketsResponse.Buckets && bucketsResponse.Buckets.length > 0) {
      console.log(`   üìã Buckets:`);
      bucketsResponse.Buckets.forEach((bucket, index) => {
        console.log(`      ${index + 1}. ${bucket.Name}`);
      });
    }
    
    console.log('');
    
    // Probar acceder al bucket espec√≠fico
    console.log('üîç Paso 2: Accediendo al bucket espec√≠fico...');
    const command = new ListObjectsV2Command({
      Bucket: config.bucketName,
      MaxKeys: 10
    });
    
    const response = await s3Client.send(command);
    
    console.log(`   ‚úÖ Bucket "${config.bucketName}" accesible`);
    console.log(`   üìä Archivos encontrados: ${response.KeyCount || 0}`);
    
    if (response.Contents && response.Contents.length > 0) {
      console.log(`   üìã Primeros archivos:`);
      response.Contents.forEach((obj, index) => {
        const size = (obj.Size / 1024 / 1024).toFixed(2);
        console.log(`      ${index + 1}. ${obj.Key} (${size} MB)`);
      });
    }
    
    console.log('');
    console.log('üéâ ¬°CONFIGURACI√ìN EU FUNCIONA!');
    console.log('');
    console.log('üí° Actualiza el script download-r2-files.js con:');
    console.log('   region: "eu-west-1",');
    console.log('   endpoint: `https://${config.accountId}.r2.cloudflarestorage.com`,');
    
  } catch (error) {
    console.log(`‚ùå Error: ${error.message}`);
    if (error.Code) {
      console.log(`üìù C√≥digo: ${error.Code}`);
    }
    console.log('');
    console.log('üîß Intentando con regi√≥n "auto"...');
    
    // Probar con regi√≥n auto
    const s3ClientAuto = new S3Client({
      region: 'auto',
      endpoint: `https://${config.accountId}.r2.cloudflarestorage.com`,
      credentials: {
        accessKeyId: config.accessKeyId,
        secretAccessKey: config.secretAccessKey,
      },
    });
    
    try {
      const commandAuto = new ListObjectsV2Command({
        Bucket: config.bucketName,
        MaxKeys: 5
      });
      
      const responseAuto = await s3ClientAuto.send(commandAuto);
      
      console.log(`‚úÖ Bucket "${config.bucketName}" accesible con regi√≥n "auto"`);
      console.log(`üìä Archivos encontrados: ${responseAuto.KeyCount || 0}`);
      
      if (responseAuto.Contents && responseAuto.Contents.length > 0) {
        console.log(`üìã Primeros archivos:`);
        responseAuto.Contents.forEach((obj, index) => {
          const size = (obj.Size / 1024 / 1024).toFixed(2);
          console.log(`   ${index + 1}. ${obj.Key} (${size} MB)`);
        });
      }
      
      console.log('');
      console.log('üéâ ¬°CONFIGURACI√ìN "auto" FUNCIONA!');
      
    } catch (errorAuto) {
      console.log(`‚ùå Error con regi√≥n "auto": ${errorAuto.message}`);
      console.log('');
      console.log('üí° Posibles soluciones:');
      console.log('1. Verifica que el bucket "bucket-wedding" existe en tu cuenta R2');
      console.log('2. Verifica que las credenciales tengan permisos para este bucket');
      console.log('3. Intenta crear el bucket desde el dashboard de Cloudflare');
    }
  }
}

probarEU(); 